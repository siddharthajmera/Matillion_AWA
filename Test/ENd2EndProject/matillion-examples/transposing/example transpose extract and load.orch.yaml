type: "orchestration"
version: "1.0"
pipeline:
  components:
    Capture Table Metadata:
      type: "table-metadata-to-grid"
      transitions:
        success:
        - "Prepare column lists"
      skipped: false
      parameters:
        componentName: "Capture Table Metadata"
        database: "[Environment Default]"
        schema: "${examples_schema}"
        gridVariable: "gv_columns"
        gridVariableMapping:
        - "Name"
        targetTable: "stg_batteryelectric_wide"
    Prepare column lists:
      type: "python-script"
      transitions:
        success:
        - "Wide to narrow"
      skipped: false
      parameters:
        componentName: "Prepare column lists"
        script: "# Set the scalar variables to the concatenation of all the column\
          \ names that contain a 'Q'\n# \n# Don't use Python in Matillion to manipulate\
          \ DATA: only use it for METADATA like we are doing here\n\n# This scalar\
          \ variable will contain a list of column names enclosed in double-quotes\n\
          # This is an example of narrow to wide data transposition in Python :-)\n\
          context.updateVariable('prvt_cols_dq', ','.join('\"' + e[0] + '\"' for e\
          \ in list(filter(lambda x:'Q' in x[0], context.getGridVariable('gv_columns')))))\n\
          \n# This scalar variable will contain a list of column names enclosed in\
          \ single-quotes\ncontext.updateVariable('prvt_cols_sq', ','.join(\"'\" +\
          \ e[0] + \"'\" for e in list(filter(lambda x:'Q' in x[0], context.getGridVariable('gv_columns')))))\n\
          \n# This scalar variable will contain an unquoted list of valid database\
          \ column names (i.e. don't begin with a number)\ncontext.updateVariable('prvt_pivot_aliases',\
          \ ','.join(\"COUNT_\" + e[0].replace(\" \", \"_\") for e in list(filter(lambda\
          \ x:'Q' in x[0], context.getGridVariable('gv_columns')))))\n\n# This grid\
          \ variable will contain a list of the quarter-name columns to transpose\n\
          context.updateGridVariable('gv_pivotnames', [[e[0]] for e in list(filter(lambda\
          \ x:'Q' in x[0], context.getGridVariable('gv_columns')))])\n"
        interpreter: "Python 3"
        timeout: "360"
    Wide to narrow:
      type: "run-transformation"
      transitions:
        success:
        - "Narrow to wide"
      skipped: false
      parameters:
        componentName: "Wide to narrow"
        transformationJob: "Test/ENd2EndProject/matillion-examples/transposing/example\
          \ transpose transformation 1 wide to narrow"
        setScalarVariables:
        - - "jv_col_list"
          - "${prvt_cols_dq}"
        setGridVariables:
        - variable: "gv_quarters"
          status: "grid"
          gridValues:
            fromGrid:
              variable: "gv_pivotnames"
              columns:
              - "qname"
    Narrow to wide:
      type: "run-transformation"
      skipped: false
      parameters:
        componentName: "Narrow to wide"
        transformationJob: "Test/ENd2EndProject/matillion-examples/transposing/example\
          \ transpose transformation 2 narrow to wide"
        setScalarVariables:
        - - "jv_col_list"
          - "${prvt_cols_sq}"
        - - "jv_pivot_aliases"
          - "${prvt_pivot_aliases}"
        setGridVariables:
    Check variables:
      type: "bash-script"
      transitions:
        success:
        - "Data Transfer"
      skipped: false
      parameters:
        componentName: "Check variables"
        script: "# Check that the variables examples_storage and examples_schema exist\n\
          # and have valid default values\n\nif [ -z \"${examples_storage}\" ]\nthen\n\
          \techo \"You must set a default value for examples_storage under Project\
          \ / Manage Environment Variables\"\n    exit 99\nelse\n\techo \"examples_storage\
          \ = '${examples_storage}'\"\nfi\n\nif [[ ${examples_storage} == s3* ]]\n\
          then\n\techo \"The default value for examples_storage must not start with\
          \ s3://\"\n    exit 99\nfi\n\nif [ -z \"${examples_schema}\" ]\nthen\n\t\
          echo \"You must set a default value for examples_schema under Project /\
          \ Manage Environment Variables\"\n    exit 99\nelse\n\techo \"examples_schema\
          \ = '${examples_schema}'\"\nfi\n"
        timeout: "360"
    Data Transfer:
      type: "data-transfer-object"
      transitions:
        success:
        - "Recreate stg_batteryelectric_wide"
      skipped: false
      parameters:
        componentName: "Data Transfer"
        sourceType: "HTTPS"
        performCertificateValidation: "No"
        sourceUrl3: "${prvt_sample_data_url}"
        sourceUsername1: ""
        sourcePassword1: ""
        unpackZipFile: "No"
        targetType: "S3"
        gzipData: "No"
        targetObjectName: "matillion-examples/data/structured/EV/BatteryElectric.tsv"
        targetUrl2: "s3://${examples_storage}"
        accessControlListOptions: ""
        encryption: "None"
    Assert Table 0:
      type: "assert-table"
      transitions:
        success:
        - "Capture Table Metadata"
      skipped: false
      parameters:
        componentName: "Assert Table 0"
        database: "[Environment Default]"
        schema: "${examples_schema}"
        tableName: "stg_batteryelectric_wide"
        exists: "Yes"
        tableMetadata:
        rowCountComparisonType: "Equal To"
        rowCountValue: "116"
    Start 0:
      type: "start"
      transitions:
        unconditional:
        - "Check variables"
      skipped: false
      parameters:
        componentName: "Start 0"
    Recreate stg_batteryelectric_wide:
      type: "create-table-v2"
      transitions:
        success:
        - "S3 Load stg_batteryelectric_wide"
      skipped: false
      parameters:
        componentName: "Recreate stg_batteryelectric_wide"
        createMethod: "Replace"
        database: "[Environment Default]"
        schema: "${examples_schema}"
        table: "stg_batteryelectric_wide"
        snowflakeTableType: "Permanent"
        columns:
        - - "Make"
          - "VARCHAR"
          - "40"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "Model"
          - "VARCHAR"
          - "256"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2022 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2021 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2020 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2019 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2018 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2017 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2016 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2015 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2014 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2013 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2012 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2011 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q4"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q3"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q2"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "2010 Q1"
          - "VARCHAR"
          - "20"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation: ""
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays: ""
        comment: ""
    S3 Load stg_batteryelectric_wide:
      type: "s3-load"
      transitions:
        success:
        - "Assert Table 0"
      skipped: false
      parameters:
        componentName: "S3 Load stg_batteryelectric_wide"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://${examples_storage}"
        pattern: "matillion-examples/data/structured/EV/BatteryElectric.tsv"
        encryption: "None"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "${examples_schema}"
        targetTable: "stg_batteryelectric_wide"
        loadColumns:
        format: "[Custom]"
        fileType: "CSV"
        compression: "AUTO"
        recordDelimiter: ""
        fieldDelimiter: "\\t"
        skipHeader: "1"
        skipBlankLines: "False"
        dateFormat: ""
        timeFormat: ""
        timestampFormat: ""
        escape: ""
        escapeUnenclosedField: ""
        trimSpace: "False"
        fieldOptionallyEnclosed: ""
        nullIf:
        - - ""
        errorOnColumnCountMismatch: "False"
        emptyFieldAsNull: "False"
        replaceInvalidCharacters: "False"
        encodingType: ""
        onError: "Abort Statement"
        sizeLimitB: ""
        purgeFiles: "False"
        truncateColumns: "False"
        forceLoad: "False"
  variables:
    prvt_cols_dq:
      metadata:
        type: "TEXT"
        description: "A comma-separated list of column names, in double-quotes"
        scope: "SHARED"
        visibility: "PRIVATE"
      defaultValue: ""
    prvt_cols_sq:
      metadata:
        type: "TEXT"
        description: "A comma-separated list of column names, in single-quotes."
        scope: "SHARED"
        visibility: "PRIVATE"
      defaultValue: ""
    prvt_pivot_aliases:
      metadata:
        type: "TEXT"
        description: "An unquoted list of valid database column names for the quarters"
        scope: "SHARED"
        visibility: "PRIVATE"
      defaultValue: ""
    prvt_sample_data_url:
      metadata:
        type: "TEXT"
        description: "The HTTPS URL of the base data"
        scope: "SHARED"
        visibility: "PRIVATE"
      defaultValue: "https://s3.eu-west-1.amazonaws.com/devrel.matillion.com/data/structured/EV/BatteryElectric.tsv"
    gv_columns:
      metadata:
        type: "GRID"
        description: "Contains a list of all the column names in the wide table"
        scope: "SHARED"
        visibility: "PRIVATE"
        columns:
          name:
            columnType: "TEXT"
      defaultValue: []
    gv_pivotnames:
      metadata:
        type: "GRID"
        description: |-
          A list of unquoted quarter names.
          This grid variable is private to this job, but is sent to the called transformation jobs
        scope: "SHARED"
        visibility: "PRIVATE"
        columns:
          qname:
            columnType: "TEXT"
      defaultValue: []
design:
  components:
    Capture Table Metadata:
      position:
        x: 512
        "y": -16
      tempMetlId: 1651
    Prepare column lists:
      position:
        x: 640
        "y": -16
      tempMetlId: 1652
    Wide to narrow:
      position:
        x: 752
        "y": -16
      tempMetlId: 1653
    Narrow to wide:
      position:
        x: 864
        "y": -16
      tempMetlId: 1654
    Check variables:
      position:
        x: -128
        "y": -16
      tempMetlId: 1655
    Data Transfer:
      position:
        x: -16
        "y": -16
      tempMetlId: 1656
    Assert Table 0:
      position:
        x: 400
        "y": -16
      tempMetlId: 1657
    Start 0:
      position:
        x: -240
        "y": -16
      tempMetlId: 1698
    Recreate stg_batteryelectric_wide:
      position:
        x: 144
        "y": -16
      tempMetlId: 1699
    S3 Load stg_batteryelectric_wide:
      position:
        x: 288
        "y": -16
      tempMetlId: 1700
  notes:
    "1697":
      position:
        x: -306
        "y": 113
      size:
        height: 82
        width: 854
      theme: "green"
      content: |-
        This is the example job from Transposing data with Matillion ETL [https://www.matillion.com/resources/blog/rows-to-columns-transposing-data-with-matillion-etl](https://www.matillion.com/resources/blog/rows-to-columns-transposing-data-with-matillion-etl)

        Run this job first. It loads the data and runs both transformation jobs.

        Then open the two transformation jobs. Use the sample tab to view the results of the various transposing methods.
    "1696":
      position:
        x: -65
        "y": -88
      size:
        height: 140
        width: 119
      theme: "green"
      content: "Copy source data into cloud storage"
    "1695":
      position:
        x: -414
        "y": -228
      size:
        height: 77
        width: 578
      theme: "yellow"
      content: |
        You **must** supply a default value for the following variables:

        **examples_storage** (E.g. if your S3 bucket is named s3://the-bucket then set the default value to **the-bucket**)
        **examples_schema** (name of a Snowflake schema)
    "1694":
      position:
        x: 804
        "y": -101
      size:
        height: 171
        width: 158
      theme: "yellow"
      content: "This transformation job uses a table that was created by the previous\
        \ transformation job"
